<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:MicroNotes"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="MicroNotes.MainWindow"
        xmlns:avaloniaEdit="clr-namespace:AvaloniaEdit;assembly=AvaloniaEdit"
        xmlns:editing="https://github.com/avaloniaui/avaloniaedit"
        x:DataType="vm:MainWindowViewModel"
		Width="1100"
        x:Name="Root"
		Height="700"
        FontFamily="{StaticResource OpenSans}"
        Icon="/Assets/icon.png"
        Title="Âµnotes">
    <Design.DataContext>
        <!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
        <vm:MainWindowViewModel/>
    </Design.DataContext>
    <Window.Resources>
        <StreamGeometry x:Key="MenuIcon">
            M12,16A2,2 0 0,1 14,18A2,2 0 0,1 12,20A2,2 0 0,1 10,18A2,2 0 0,1 12,16M12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12A2,2 0 0,1 12,10M12,4A2,2 0 0,1 14,6A2,2 0 0,1 12,8A2,2 0 0,1 10,6A2,2 0 0,1 12,4Z
        </StreamGeometry>        
        <StreamGeometry x:Key="BurgerIcon">
            M3,6H21V8H3V6M3,11H21V13H3V11M3,16H21V18H3V16Z
        </StreamGeometry>
    </Window.Resources>
    <Window.Styles>
        
        <!-- Title Box -->
        <Style Selector="TextBox#TitleBox">
            <Setter Property="Margin" Value="{x:Static vm:ActiveTheme.TitlePadding}"/>
            <Setter Property="FontSize" Value="{x:Static vm:ActiveTheme.TitleFontSize}"/>
            <Setter Property="Foreground" Value="{x:Static vm:ActiveTheme.TitleTextColor}"/>
            <Setter Property="SelectionBrush" Value="{x:Static vm:ActiveTheme.TitleTextSelectionBackgroundColor}"/>
            <Setter Property="SelectionForegroundBrush" Value="{x:Static vm:ActiveTheme.TitleTextSelectionColor}"/>
        </Style>
        
        <Style Selector="TextBox#TitleBox:pointerover">
            <Setter Property="Foreground" Value="{x:Static vm:ActiveTheme.TitleTextColor}"/>
        </Style>
        
        <Style Selector="TextBox#TitleBox:focus">
            <Setter Property="Foreground" Value="{x:Static vm:ActiveTheme.TitleTextColor}"/>
        </Style>
        
        <!-- Content Editor -->
        <Style Selector="avaloniaEdit|TextEditor#TextEditor">
            <Setter Property="Padding" Value="{x:Static vm:ActiveTheme.TextPadding}"/>
            <Setter Property="FontSize" Value="{x:Static vm:ActiveTheme.TextFontSize}"/>
            <Setter Property="Foreground" Value="{x:Static vm:ActiveTheme.ContentTextColor}" />
        </Style>
        
        <Style Selector="avaloniaEdit|TextEditor#TextEditor editing|TextArea">
            <Setter Property="SelectionCornerRadius" Value="0"/>
            <Setter Property="SelectionBrush" Value="{x:Static vm:ActiveTheme.ContentTextSelectionBackgroundColor}"/>
            <Setter Property="SelectionForeground" Value="{x:Static vm:ActiveTheme.ContentTextSelectionColor}"/>
        </Style>
        
        
        <!-- MenuButton -->
        <Style Selector="Menu#MenuBar">
            <Setter Property="Height" Value="{x:Static vm:ActiveTheme.MenuButtonHeight}"/>
            <Setter Property="Width" Value="{x:Static vm:ActiveTheme.MenuButtonWidth}"/>
            <Setter Property="Margin" Value="{x:Static vm:ActiveTheme.MenuButtonMargin}"/>
        </Style>
        <Style Selector="MenuItem#MenuButton">
            <Setter Property="CornerRadius" Value="{x:Static vm:ActiveTheme.MenuButtonRadius}"/>
            <Setter Property="Background" Value="{x:Static vm:ActiveTheme.MenuButtonBackgroundColor}"/>
        </Style>
        
        <Style Selector="MenuItem#MenuButton">
            <Setter Property="Height" Value="{x:Static vm:ActiveTheme.MenuButtonHeight}"/>
            <Setter Property="Width" Value="{x:Static vm:ActiveTheme.MenuButtonWidth}"/>
            <Setter Property="Padding" Value="{x:Static vm:ActiveTheme.MenuButtonPadding}"/>
        </Style>
        
        <Style Selector="MenuItem#MenuButton Path">
            <Setter Property="Fill" Value="{x:Static vm:ActiveTheme.MenuButtonIconColor}"/>
        </Style>
        
        <Style Selector="MenuItem#MenuButton:pointerover:not(:pressed) /template/ Border#PART_LayoutRoot">
            <Setter Property="Background" Value="{x:Static vm:ActiveTheme.MenuButtonBackgroundColorHover}"/>
        </Style>
        <Style Selector="MenuItem#MenuButton:pointerover:not(:pressed) Path">
            <Setter Property="Fill" Value="{x:Static vm:ActiveTheme.MenuButtonIconColorHover}"/>
        </Style>
        
        <Style Selector="MenuItem#MenuButton:pressed /template/ Border#PART_LayoutRoot">
            <Setter Property="Background" Value="{x:Static vm:ActiveTheme.MenuButtonBackgroundColorOpen}"/>
        </Style>
        <Style Selector="MenuItem#MenuButton:pressed Path">
            <Setter Property="Fill" Value="{x:Static vm:ActiveTheme.MenuButtonIconColorOpen}"/>
        </Style>
        
        <Style Selector="MenuItem#MenuButton:open /template/ Border#PART_LayoutRoot">
            <Setter Property="Background" Value="{x:Static vm:ActiveTheme.MenuButtonBackgroundColorOpen}"/>
        </Style>
        <Style Selector="MenuItem#MenuButton:open Path">
            <Setter Property="Fill" Value="{x:Static vm:ActiveTheme.MenuButtonIconColorOpen}"/>
        </Style>
        
        <!-- ListBox -->
        <Style Selector="ListBox#ListBox">
            <Setter Property="Background" Value="{x:Static vm:ActiveTheme.SidebarBackgroundColor}"/>
        </Style>
        
        <!-- ListBox items -->
        <Style Selector="ListBox#ListBox ListBoxItem TextBlock">
            <Setter Property="FontSize" Value="{x:Static vm:ActiveTheme.ListItemFontSize}"/>
        </Style>
        
        <Style Selector="ListBox#ListBox ListBoxItem">
            <Setter Property="CornerRadius" Value="{x:Static vm:ActiveTheme.ListItemRadius}"/>
            <Setter Property="Margin" Value="{x:Static vm:ActiveTheme.ListItemMargin}"/>
            <Setter Property="Padding" Value="{x:Static vm:ActiveTheme.ListItemPadding}"/>
            <Setter Property="Background" Value="{x:Static vm:ActiveTheme.ListItemBackgroundColor}"/>
            <Setter Property="Foreground" Value="{x:Static vm:ActiveTheme.ListItemTextColor}"/>
            <Setter Property="BorderThickness" Value="{x:Static vm:ActiveTheme.ListItemBorder}"/>
            <Setter Property="BorderBrush" Value="{x:Static vm:ActiveTheme.ListItemBorderColor}"/>
        </Style>
        
        <Style Selector="ListBox#ListBox ListBoxItem:pointerover /template/ ContentPresenter#PART_ContentPresenter">
            <Setter Property="Background" Value="{x:Static vm:ActiveTheme.ListItemBackgroundColorHover}"/>
            <Setter Property="Foreground" Value="{x:Static vm:ActiveTheme.ListItemTextColorHover}"/>
            <Setter Property="BorderThickness" Value="{x:Static vm:ActiveTheme.ListItemBorderHover}"/>
            <Setter Property="BorderBrush" Value="{x:Static vm:ActiveTheme.ListItemBorderColorHover}"/>
        </Style>
        
        <Style Selector="ListBox#ListBox ListBoxItem:selected /template/ ContentPresenter#PART_ContentPresenter">
            <Setter Property="Background" Value="{x:Static vm:ActiveTheme.ListItemBackgroundColorSelected}"/>
            <Setter Property="Foreground" Value="{x:Static vm:ActiveTheme.ListItemTextColorSelected}"/>
            <Setter Property="BorderThickness" Value="{x:Static vm:ActiveTheme.ListItemBorderSelected}"/>
            <Setter Property="BorderBrush" Value="{x:Static vm:ActiveTheme.ListItemBorderColorSelected}"/>
        </Style>
        
        <!-- Content section -->
        <Style Selector="Grid#ContentSection">
            <Setter Property="Background" Value="{x:Static vm:ActiveTheme.ContentBackgroundColor}"/>
        </Style>
        
        <!-- Splitter -->
        <Style Selector="GridSplitter#Splitter">
            <Setter Property="Background" Value="{x:Static vm:ActiveTheme.SplitterColor}"/>
            <Setter Property="MinWidth" Value="{x:Static vm:ActiveTheme.SplitterWidth}"/>
        </Style>
        
        <!-- Placeholder -->
        <Style Selector="TextBlock#PlaceholderText">
            <Setter Property="Foreground" Value="{x:Static vm:ActiveTheme.PlaceholderTextColor}"/>
            <Setter Property="FontSize" Value="{x:Static vm:ActiveTheme.PlaceholderFontSize}"/>
        </Style>
        
        <!-- Extra stuff (not themeable) -->
        <Style Selector="#TitleBox:focus /template/ Border#PART_BorderElement">
            <Setter Property="BorderThickness" Value="0" />
        </Style>
    </Window.Styles>
    <Window.KeyBindings>
        <KeyBinding Gesture="Ctrl+S" Command="{Binding SaveCommand}"/>
        <KeyBinding Gesture="Ctrl+N" Command="{Binding NewCommand}"/>
        <KeyBinding Gesture="Ctrl+Shift+D" Command="{Binding DeleteCommand}"/>
        <KeyBinding Gesture="Ctrl+O" Command="{Binding OpenFolderCommand}"/>
    </Window.KeyBindings>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250" MinWidth="60" />
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*" MinWidth="100"/>
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="0" 
              RowDefinitions="*, Auto">
            <ScrollViewer Grid.Row="0">
                <ListBox x:Name="ListBox" 
                         ItemsSource="{Binding Notes}" 
                         SelectedItem="{Binding SelectedNote}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <TextBlock FontFamily="{StaticResource OpenSansBold}"
                                           IsVisible="{Binding HasUnsavedChanges}"
                                           Text="{Binding OriginalTitle}" />
                                <TextBlock FontFamily="{StaticResource OpenSans}" IsVisible="{Binding !HasUnsavedChanges}" 
                                           Text="{Binding OriginalTitle}" />
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </ScrollViewer>
            <Grid Grid.Row="1" 
                  Background="{Binding ElementName=ListBox, Path=Background}">
                <Menu x:Name="MenuBar" 
                      HorizontalAlignment="Left">
                    <MenuItem x:Name="MenuButton">
                        <MenuItem.Header>
                            <Border x:Name="MenuButtonBorder">
                                <Viewbox>
                                    <Path Height="24" Width="24"
                                          Data="{StaticResource MenuIcon}"/>
                                </Viewbox>
                            </Border>
                        </MenuItem.Header>
                        <MenuItem Header="Save note"
                                  IsVisible="{Binding FolderPath, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
                                  IsEnabled="{Binding SelectedNote.HasUnsavedChanges, FallbackValue=false}"
                                  Command="{Binding SaveCommand}" 
                                  InputGesture="Ctrl+S" />
                        <MenuItem Header="New note" Command="{Binding NewCommand}" 
                                  InputGesture="Ctrl+N"
                                  IsVisible="{Binding FolderPath, Converter={x:Static StringConverters.IsNotNullOrEmpty}}" />
                        <MenuItem Header="Delete note" Command="{Binding DeleteCommand}"
                                  InputGesture="Ctrl+Shift+D"
                                  IsVisible="{Binding FolderPath, Converter={x:Static StringConverters.IsNotNullOrEmpty}}" />
                        <MenuItem Header="Open folder" Command="{Binding OpenFolderCommand}"
                                  InputGesture="Ctrl+O" />
                    </MenuItem>
                </Menu>
            </Grid>
        </Grid>
        <GridSplitter x:Name="Splitter"
                      Grid.Column="1" 
                      ResizeDirection="Columns" />
        <Grid Grid.Column="2" x:Name="ContentSection">
            <Grid IsVisible="{Binding SelectedNote, Converter={x:Static ObjectConverters.IsNull}}">
                <TextBlock x:Name="PlaceholderText"
                           VerticalAlignment="Center" 
                           HorizontalAlignment="Center" 
                           FontFamily="{StaticResource OpenSansBold}"
                           Text="Âµnotes"/>
            </Grid>

            <Grid IsVisible="{Binding SelectedNote, Converter={x:Static ObjectConverters.IsNotNull}}"
                  RowDefinitions="Auto, *">
                <TextBox x:Name="TitleBox" 
                         Padding="0"
                         CornerRadius="0"
                         Grid.Row="0"
                         Background="Transparent"
                         Text="{Binding SelectedNote.Title, FallbackValue=''}"
                         FontFamily="{StaticResource OpenSansBold}"
                         BorderThickness="0"
                         VerticalContentAlignment="Center"/>
                <avaloniaEdit:TextEditor Grid.Row="1"
                                         x:Name="TextEditor"
                                         WordWrap="True"
                                         Background="Transparent"
                                         IsVisible="{Binding SelectedNote.Document, Converter={x:Static ObjectConverters.IsNotNull}, FallbackValue={x:Null}}"
                                         Document="{Binding SelectedNote.Document, FallbackValue={x:Null}}"
                                         VerticalScrollBarVisibility="Auto"
                                         HorizontalScrollBarVisibility="Disabled"
                                         FontFamily="{StaticResource Inconsolata}" />
            </Grid>
        </Grid>
    </Grid>
</Window>